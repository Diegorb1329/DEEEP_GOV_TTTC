


Anti-Sybil Legos
https://gov.gitcoin.co/t/anti-sybil-legos/12265
    *This post is intended to give a high level outline of the way we are thinking about composable  anti-Sybil Lego's as we move to the protocol-based grants system*

Gitcoin depends on Gitcoin grants which depends on quadratic funding which has to be defended against Sybils. The core of this is solving for one-human one-vote. Right now, Gitcoin does this by identifying Sybil behaviours in users and then "squelching" those users from the system - this is done using a sequence of data science tools and human reviews that are managed by a relatively small pool of trusted operators. However, Gitcoin is decentralizing by converting the core functions into a set of tools that together comprise a protocol that can be applied by individual round and grant owners rather than by a centralized team. The tools can also be forked and recombined in creative ways in other projects, making them useful across the whole of Web3, not just within Gitcoin.

This transition requires the Sybil defense and grant reviewing procedures currently managed by humans to be broken down into discrete units, defined in code, documented and made accessible as composable building blocks. These are known as "Legos". Lego bricks are simple building blocks that can be connected to each other in creative combinations to form all kinds of structures or even machines that are much more complex than their component parts. Similarly, modular, composable software tools can be used to build imaginative systems for defending against Sybils. 

This post examines what a "Lego" is and what we should be aware of when we build them.

## What does a Lego look like?

A "Lego"is a discrete unit that performs one, specific function in the Gitcoin protocol. It should work as a building block, meaning that it should be deployable on its own, taking well defined inputs and returning some known outputs. It should also connect to other Legos, which requires some standardization of types and formats for inputs and outputs so that tools can be chained together in intuitive pipelines. Making these Lego's available empowers the community to build on top of them and saves developers from having to repeatedly reinvent the wheel when building out new products.

To be truly composable,a Lego should be:

- **Tightly scoped**: the tool should fulfill one single function without side-effects so that it can be deployed in a variety of contexts with reliable outcomes.
- **Free and open**: open source codes that is publicly available, auditable, able to run on normal consumer hardware.
- **Permissionless**: not requiring special credentials or licenses to view, download or deploy, and users have the ability to fork the code any time.
- **Accessible**: sufficiently well-documented and with intuitive UX to enable a wide community of users
- **Minimal dependencies**: protect the "supply chain" by minimizing the dependencies. Where dependencies are unavoidable, bundle them or make them very easy to access.
- **Modular**: uses common formats and types so that outputs of one Lego can become inputs to another in pipelines - i.e. the legos are designed to be used as building blocks for larger systems with no specific predetermined structure.
- **Open governance**: Decisions about the development of the Lego's should not be gated by individuals or centralized groups - instead governance should be open so that users can trust that the code will be developed and maintained with integrity and community participation. 

Some examples of Lego's that conform to these norms are smart contracts on Ethereum. Smart contracts, or even individual functions of smart contracts, can be forked and rewritten, or stacked on top of each other in creative ways to build new protocols. This is common practise in DeFi, where primitives such as asset borrowing, lending and staking contracts are combined in many different ways by teams aiming to create protocols optimized for yield, or resilience, or security. Token standards such as ERC-20 (Ethereum token standard) and ERC-721 (Ethereum NFT standard) are composable primitives that can be built on top of - there is a huge diversity of token and NFT projects built on top of these original standards, often in combination with DeFi Legos, creating a diverse landscape of decentralized financial products and a community with freedom and agency to create new versions and implement new ideas.

We want to bring that freedom and agency to public goods funding. Rather than being centralized overseers of public goods funding, we want to share tools that empower the community to do it in clever and creative new ways.

## Gitcoin Legos

To enable this decentralized future, we need Lego's that can be used to protect public goods funding from Sybil attacks. There is a diverse plurality of attackers, so we need a diverse and reactive plurality of defenses and this can only come from bottom-up protocols built by communities, for communities, using composable primitives. If the default settings for Sybil scoring doesn't work for a sub-community? No problem, open, composable tools allow subcommunities to optimize their own configurations and to chop up and recombine the tools in the right way for their specific use-case. Attackers do this to exploit vulnerabilities - the only way to tip the scales in favour of defenders is to enable defenders to do the same. For example, a grant seeking to build specific web3 infrastructure could benefit from filtering proposals based on recurring keywords or phrases. However, this behaviour could feasibly be learned by a text-generating Sybil algorithm that could capitalize on the same recurrence patterns. Alternatively, a Lego based system could enable round owners to comply with different standards in different scenarios, for example KYC/KYB Legos could be incorporated into a grant when required, and ommitted otherwise. 

![](upload://1NE3LSt8rzYaT4uPNsX6zKP0PWG.png)


### Gitcoin Passport

One major Lego that is already available is Gitcoin Passport. Gitcoin Passport is a tool that allows users to prove they have some credentials that make them more trustable. These credentials can come from Web2 or Web3. Example from Web2 include having a Facebook, Twitter, Github or Google accounts that meet some basic criteria (number of followers/posts etc). From Web3, BrightID, ENS and Proof-of-Humanity profiles can be used as stamps. The stamps are generated by the user exposing their Web2/Web3 accounts once, and then a stamp is minted in the user's Passport, with no personal identifying data saved along the way. The passport only includes the stamps - the proof that evidence exists - and no actual identifying data (working like a zero-knowledge proof). 

One of the powerful features of Gitcoin passport is that the precise combinations of stamps in a wallet can be used to generate a "trust score". This can then be used to scale the influence a user has on a vote - more trusted leads to greater influence, less trusted leads to smaller influence. This trust-score could also be used as a threshold - if a user does not have trust score at least `X`, they cannot participate. Alternatively, specific stamps might be required for participation in certain grant rounds. In some ways Gitcoin Passport is a kind of Lego of Lego's in that it is itself a modular component in a Sybil defense system, but it can also be thought of as a wrapper around various stamp combinations that provide evidence for some specific credential. For example, one passport credential might be "Professional Presence" which takes in LinkedIn and Twitter stamps - another might be "Web3 education" that takes in NFTs or soulbound tokens administered by verified courses (e.g. Rabbit Hole, Gitcoin quests, various bootcamps). "Community Involvement" might include a boolean for whether a base-line number of grant donations has been met, as well as other indicators such as a boolean for number of twitter followers. This way of thinking implies some heirarchy of Legos, with stamp combinations that fulfil some common purpose being low-level Legos and Passport itself being a higher level Lego. 

Importantly, communities using Gitcoin Passport as an identity/Sybil defense Lego can define new stamps and screen passports in ways that give them the greatest power to defend their grant round. A great example is using GitPOAP as a stamp as this proves that a user has made some contributions to a specific Github repository, indicating that they are really part of a builder community for some project. This would be a very important stamp for one community, but irrelevant for many others. Rather than being a simple test of whether a user has a "valid" passport, communities are empowered to build nuanced trust and reputation systems from Gitcoin Passport stamps and related tooling.

As part of the tooling, Gitcoin passport exposes an API for builders that includes functions for scoring passports. This means prebuilt, free and open-source tools for analyzing and digesting Passport data can easily be integrated into a Sybil defense/identity system. The API makes it easy for developers to adjust the way a platform scores combinations of stamps. If a user doesn't agree with the default scoring algorithm defined by Gitcoin data scientists - no problem, they can define something that works for them without havign to build new tools from scratch but by tweaking parameters in simple API calls. The API itself is openly available and documented so it could be forked and revised by developers that want to make more substantial changes to the underlying code. Eventually, the landscape should include intuitive "no-code" UIs (e.g. web apps) for end users to define and combine their own Legos but also deeper access via modular APIs and open-access source code for developers. 

Gitcoin Passport is also a great example of composable tools being built for one purpose (Gitcoin Sybil defense) but being used in creative ways across Web3. It is being used to give roles in Ethstaker's Discord server, for gating NFT mints at Bankless Academy and adding Sybil resistance to the [Snapshot](https://go.gitcoin.co/blog/gitcoin-passport-snapshot-making-dao-coordination-more-secure) decentralized voting platform - very valuable use-cases that are completely disconnected from the original intended purpose - the epitome of composability!

![](upload://f6DjhTxJCtIhsHF6VZOxF3dtx2C.png)

### What other Lego's do we need?

Gitcoin Passport is a very powerful anti-Sybil lego with similarities to real passports in that it serves as a form of identification that also uses stamps to demonstrate temporary association and compliance with some entity. Certain country stamps are considered more high-trust than others and that gives some variable reputational boost to the passport holder. 

However, it has also been shown that retroactive squelching of Sybils paired with Gitcoin Passport is required to really robustly defend a grant round. At the moment this is done using a trained machine learning pipeline that is operated by a few expert operators within the Gitcoin Fraud Detection and Defense squad. The challenge is to turn this centralized modelling into a set of composable Sybil defense Lego's. One option might be to develop a standard template for modelling and model auditing so that users can train models on their own features and present the results openly to the community. It would be logical for the [Open Data Community](https://www.loom.com/share/bd5a722fdd91444b81e525f650f2e857) to participate in developing and audting models for subcommunities and ensuring they meet basic standards for performance and statistical significance. This would make it possible to train models for specific subsets of users rather than a single model that applies generally to the whole of Gitcoin. These retroactive Sybil defense models can then become Legos that round owners can use in combination with other tools, including Gitcoin Passport, to defend their grant rounds against Sybil attacks. The power is with the user - they can choose to train independently, or they can use Gitcoin models "out-of-the-box".

There are also less technical tools that could become Sybil-defense legos. For example, rulesets or guidelines for resolving disputes (someone tagged as Sybil might claim to be an honest user and require human intervention). It is also possibel to develop governance legos, so that good practises developed in Gitcoin DAO can easily be forked and applied to sub-communities - again preventing users from reinventing the wheel.


## How will people use them?

The beauty of composable, modular tools is that the original developers cannot predict all the ways the tools might be used, just like the manufacturer of Lego bricks can't anticipate what will be built with them. However, we can explain the intended purpose. The lego's developed at Gitcoin are intended to turn the platform into a decentralized protocol. Individual round owners will be able to simply import useful tools for Sybil resistance, dispute resolution, governance etc that they can tweak and control without relying on a centralized team from Gitcoin but at the same time benefiting from the experience and expertise of Gitcoin data scientists, grant managers etc who develop the tools in the first place.


## Dangers of Lego

Building with Lego's is amazing because there is an infinite combination of blocks that can be used to realize a wide space of possibilities. However, there are risks associated with this composability model too.

First, when we empower users we also empower Sybil attackers. Being completely open source and accessible also means giving Sybil attackers insight into the inner workings of the defenses that aim to keep them out. This might enable them to attack more effectively - the opposite of the desired outcome. However, it is still likely that the net effect of open-sourcing Sybil defense lego's is enhanced security. The reason is that just because an attacker can understand the tools used to build a protocol, it doesn't necessarily follow that they can then attack it. The composability principle suggests that it is the combination of Lego's the attacker would have to overcome, not the individual Lego's themselves. It doesn't help an attacker to know that they require a certain Passport stamp if that same passport stamp has a cost of forgery higher than they are willing to pay, for example. This is especially true when subcommunities are empowered to set their own eligibility requirements as they can require very specific sets of credentials that might not only be hards to forge, but be specific to that subcommunity, limiting the potential rewards for an attacker. Overall, it seems more likely that plurality in the defensive layer will shift the risk:reward ratio in the favour of the defender, not the attacker.

Bribery and blackmail, on the other hand, might be a bigger problem. What happens if, instead of bearing the cost of making Sybils conform to some eligibility requirements, an attacker instead spends their capital on bribing a round owner to adjust the requirements in their favour? With composable, tuneable tools, the round owner might have the agency to tune down certain parameters or be more lenient than they otherwise would in the trust scoring system to benefit an attacker in return for some reward. This is where human intervention is important - some heirarchy of oversight where round managers monitor grants in their round and set some top-level requirements (e.g. minimum trust score must be at least `x`, `y` stamp is an essential requirement etc) would help to combat this.

Similarly, accounts that have combinations of stamps and other credentials that are likely to be classified as non-Sybil (which can be tested by attackers using the open-source tools and some assumptions about the decisions round owners will make regarding their configuration) could be bought and sold on a black market. An example might be a user that is a real, vetted person with substantial proof-of-personhood associatd with their address deciding to sell access to that address for use in a specific round they were not already intending to participate in. Renting out personhood could be a profitable strategy for users, and the market would naturally find a price per rental that is high enough for users to be incentivized to participate and low enough that attackers would profit by using the rented accounts to vote in a particular way.

There is also a risk of creating unintended consequences and vulnerabilities in some combinations of Lego's. It is very powerful to be able to create anything, but it is also difficult to anticipate all the various attack vectors and weaknesses that could inadvertently be introduced when Lego's are arranged in certain configurations. While anything can be built from lego, it is also possible to build wobbly towers. We must try to prevent this with solid documentation and educational resources and community oversight. Incentivizing code maintenance and testing as well as building will be an important defensive strategy against these "wobbly tower" scenarios.

Finally, there is the risk of releasing tools that others could use for nefarious purposes, or in ways that do not match the ethos of the original developers. For example, even if individual Lego's do not collect and store personal identifying information, a fork of the same tools might. It would be difficult for users to tell between implementations that are sufficiently private and those that are not. At this stage, the only real defense against this is a vigilant community that can call these behaviours out, clear and accessible documentation that contains ample warning about potential scams and attacks, and the development of great user friendly tools that *do* meet community standards that will naturally be adopted instead.

## Summary

Composability is a superpower for decentralized protocols. Gitcoin Passport is a great example of a high-utility identity Lego. We also need to build out more anti-Sybil lego's to enable the transition to decentralized protocol, while also being aware that composability introduces some new risks. There is a lot of opportunity for contributions from the extended Gitcoin community (importantly including the Gitcoin passort and Open Data Science communities) in the form of new Legos as well as maintenance, testing and auditing of existing ones. The broader and more diverse the community of Lego builders, the more decentralized and resilient the new Gitcoin grants protocol will be.

*Thanks to several contributors from FDD and Gitcoin passport for contributing to this post!*
Mon, 12 Dec 2022 23:23:43 +0000
🧙 🧙‍♀️ Ideas and Open Discussion


Anti-Sybil Legos
Salvador

            <p>Thank you for your response <a class="mention" href="https://gov.gitcoin.co/u/disruptionjoe">@DisruptionJoe</a></p>
<p>I see now the legos outlined in the <a href="https://gov.gitcoin.co/t/s16-proposal-integrated-fdd-budget-request/11890">S16 FDD Budget Request</a> and am looking forward to seeing them BUILT in season 16!</p>
<aside class="quote no-group">
<blockquote>
<ul>
<li>
<p>Scoring / Registry as Service</p>
</li>
<li>
<p>In-house scoring innovation across use cases</p>
</li>
<li>
<p>Enable Passport for Sybil Defense</p>
</li>
<li>
<p>Enable RO to set programmatic eligibility requirements</p>
</li>
<li>
<p>Passport stamps and different use cases across different communities</p>
</li>
<li>
<p>New Donor scoring algo</p>
</li>
</ul>
</blockquote>
</aside>
<aside class="quote no-group">
<blockquote>
<p>Designed scalable Sybil Scoring Legos</p>
</blockquote>
</aside>
          <p><a href="https://gov.gitcoin.co/t/anti-sybil-legos/12265/5">Read full topic</a></p>
        
https://gov.gitcoin.co/t/anti-sybil-legos/12265/5
        Mon, 12 Dec 2022 23:23:43 +0000
gov.gitcoin.co-post-12265-5
Anti-Sybil Legos
      

Anti-Sybil Legos
DisruptionJoe

            <p>Thanks for your thoughtful response. FDD in its current form has some propriety knowledge because we don’t want to explicitly show the attackers how to beat the system.</p>
<p>That said, we had an internal goal to become “<a href="https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle">Kerckhoff</a> compliant” by the end of this year. We aren’t there yet. We will be there for the beta launch of the protocol.</p>
<p>Here is an example of the current legos application.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://gov.gitcoin.co/uploads/db4391/original/2X/d/d2a7d06743ff23b40e74d05e83d9dbaf95024baa.jpeg" data-download-href="https://gov.gitcoin.co/uploads/db4391/d2a7d06743ff23b40e74d05e83d9dbaf95024baa" title="Image 2022-12-09 at 2.00.02 PM"><img src="https://gov.gitcoin.co/uploads/db4391/optimized/2X/d/d2a7d06743ff23b40e74d05e83d9dbaf95024baa_2_690x408.jpeg" alt="Image 2022-12-09 at 2.00.02 PM" data-base62-sha1="u3xO905VwZ3oXhz4123Xh0Lyw6m" width="690" height="408" srcset="https://gov.gitcoin.co/uploads/db4391/optimized/2X/d/d2a7d06743ff23b40e74d05e83d9dbaf95024baa_2_690x408.jpeg, https://gov.gitcoin.co/uploads/db4391/optimized/2X/d/d2a7d06743ff23b40e74d05e83d9dbaf95024baa_2_1035x612.jpeg 1.5x, https://gov.gitcoin.co/uploads/db4391/optimized/2X/d/d2a7d06743ff23b40e74d05e83d9dbaf95024baa_2_1380x816.jpeg 2x" data-dominant-color="DCE7DC"></a></div><p></p>
<p>To address the two posts you referenced:</p>
<p>The first is a post on Allocationism. It is a high level idea that I was sharing with the DAO. It wasn’t a specific call to action for FDD. (Though the post did have a specific call to action of one session exploring the DAO’s movement to community led which happened the following day.)</p>
<aside class="quote no-group" data-username="DisruptionJoe" data-post="1" data-topic="11948">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/disruptionjoe/48/106_2.png" class="avatar"><a href="https://gov.gitcoin.co/t/allocationism-towards-a-holistic-purpose-vision-strategy/11948/1">Allocationism: Towards a Holistic Purpose, Vision, &amp; Strategy</a></div>
<blockquote>
<h1>Conclusion</h1>
<p>Join our DAO wide strategy session tomorrow at DAOvibes to continue thinking about how we will transition when the protocol has been launched!</p>
</blockquote>
</aside>
<p>For the second reference, yes, this is something we would like to do, but this specific suggestion is not actioned at this time. We have built out dashboards for the Fantom &amp; Unicef round exposing data. Next we will need to take this to the next step to combine with the open source lego packages.</p>
<p>We have made adjustments to our team to be able to quickly build out the legos while continually increasing the bar for quality. Our focus is on adjusting to the onchain future where we no longer have the account name as a primary key. Additionally, we need to make sure the passport scoring is sufficient for use cases outside of grants like Bankless NFT drop &amp; Snapshot voting integrations.</p>
<aside class="quote no-group" data-username="Salvador" data-post="3" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/salvador/48/7814_2.png" class="avatar"> Salvador:</div>
<blockquote>
<p>Does the FDD have plans to build any of these “Anti Sybil Legos”? Which of the things “FDD might do in the future” has it ended up following through on?</p>
</blockquote>
</aside>
<p>You can evaluate our budget requests for the past 5 seasons and the milestone reports which accompany them. I’m not aware of many items that we have promised to execute and haven’t. I do understand that it can be confusing to see many ideas floating on the forum and not knowing which are actually on our roadmap.</p>
<p>I’d be happy to connect to discuss further if you would like. disruptionjoe#6464 on discord</p>
          <p><a href="https://gov.gitcoin.co/t/anti-sybil-legos/12265/4">Read full topic</a></p>
        
https://gov.gitcoin.co/t/anti-sybil-legos/12265/4
        Fri, 09 Dec 2022 14:35:29 +0000
gov.gitcoin.co-post-12265-4
Anti-Sybil Legos
      

Anti-Sybil Legos
Salvador

            <p>This post and <a href="https://gov.gitcoin.co/t/allocationism-towards-a-holistic-purpose-vision-strategy/11948">this one</a> and <a href="https://gov.gitcoin.co/t/what-can-we-learn-from-brightids-aura-sybil-defense-software/11159/4">this one</a> reminded me of this comment by <a class="mention" href="https://gov.gitcoin.co/u/lthrift">@lthrift</a></p>
<aside class="quote no-group" data-username="lthrift" data-post="20" data-topic="11090">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/lthrift/48/5442_2.png" class="avatar"><a href="https://gov.gitcoin.co/t/rethinking-fdd-defending-against-fraud-optimizing-capital-allocation/11090/20">Rethinking FDD: defending against fraud --&gt; optimizing capital allocation</a></div>
<blockquote>
<p>I seem to read more posts about what FDD might do in the future and what new things could be explored, yet the known problem areas and scopes of work remain “too complex” and “unmeasurable”.</p>
</blockquote>
</aside>
<p>Does the FDD have plans to build any of these “Anti Sybil Legos”?  Which of the things “FDD might do in the future” has it ended up following through on?</p>
          <p><a href="https://gov.gitcoin.co/t/anti-sybil-legos/12265/3">Read full topic</a></p>
        
https://gov.gitcoin.co/t/anti-sybil-legos/12265/3
        Thu, 08 Dec 2022 22:50:50 +0000
gov.gitcoin.co-post-12265-3
Anti-Sybil Legos
      

Anti-Sybil Legos
DisruptionJoe

            <aside class="quote no-group" data-username="j-cook" data-post="1" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/j-cook/48/5804_2.png" class="avatar"> j-cook:</div>
<blockquote>
<p>It should also connect to other Legos, which requires some standardization of types and formats for inputs and outputs so that tools can be chained together in intuitive pipelines.</p>
</blockquote>
</aside>
<p>This is definitely crucial. I see the legos as some of the first “modules” being built to improve round operator experience. Starting with individual analysis that directly say something about a wallet’s history, how a wallet interacted with a discreet round, or if a grant is an outlier in receiving sybil donations is the first step.</p>
<p>When these types of analysis are combined, we then get analysis like "What ratio of the donations from this user went to grants previously flagged for having outlier levels of sybil donations.</p>
<p>Finding the best thresholds for decision making will likely be done via data science models. However, the legos themselves being open source allows the community to verify that the flags triggered were triggered fairly. They could even suggest better models which result in reduced errors.</p>
<aside class="quote no-group" data-username="j-cook" data-post="1" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/j-cook/48/5804_2.png" class="avatar"> j-cook:</div>
<blockquote>
<p>for example KYC/KYB Legos could be incorporated into a grant when required, and ommitted otherwise.</p>
</blockquote>
</aside>
<p>Love this callout to the KYC use case.</p>
<aside class="quote no-group" data-username="j-cook" data-post="1" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/j-cook/48/5804_2.png" class="avatar"> j-cook:</div>
<blockquote>
<p>For example, one passport credential might be “Professional Presence” which takes in LinkedIn and Twitter stamps - another might be “Web3 education” that takes in NFTs or soulbound tokens administered by verified courses (e.g. Rabbit Hole, Gitcoin quests, various bootcamps). “Community Involvement” might include a boolean for whether a base-line number of grant donations has been met,</p>
</blockquote>
</aside>
<p>I’d really love to see a DevRel squad really leaning into this “meta-stamping” which provides more context to a set of stamps.</p>
<aside class="quote no-group" data-username="j-cook" data-post="1" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/j-cook/48/5804_2.png" class="avatar"> j-cook:</div>
<blockquote>
<p>he reason is that just because an attacker can understand the tools used to build a protocol, it doesn’t necessarily follow that they can then attack it.</p>
</blockquote>
</aside>
<p>FDD had an over-arching internal goal to be “Kerckhoff Compliant” by the end of this year. The majority of sybil behavior on the platform is from naive sybil accounts which are unlikely to invest the time and resources to look into our defenses. For those that do, new behaviors will be caught and GTC utility use cases may bring us a system which is more expensive to attack than it is to defend.</p>
<aside class="quote no-group" data-username="j-cook" data-post="1" data-topic="12265">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://gov.gitcoin.co/user_avatar/gov.gitcoin.co/j-cook/48/5804_2.png" class="avatar"> j-cook:</div>
<blockquote>
<p>Bribery and blackmail, on the other hand, might be a bigger problem. What happens if, instead of bearing the cost of making Sybils conform to some eligibility requirements, an attacker instead spends their capital on bribing a round owner to adjust the requirements in their favour? With composable, tuneable tools, the round owner might have the agency to tune down certain parameters or be more lenient than they otherwise would in the trust scoring system to benefit an attacker in return for some reward.</p>
</blockquote>
</aside>
<p>Understanding “optimal capital allocation” will help with this. The community can highlight rounds that are working and ones that aren’t. Donors can vote with their feet by choosing to participate in another round when they deem a round operator to be illegitimate.</p>
<p>This is not only useful for identifying illegitimate round operator behavior, but also for identifying the best “funding stack”. Which set of modules &amp; legos generally result in better outcomes?</p>
<p>Overall, it is a great article! Thanks!</p>
          <p><a href="https://gov.gitcoin.co/t/anti-sybil-legos/12265/2">Read full topic</a></p>
        
https://gov.gitcoin.co/t/anti-sybil-legos/12265/2
        Thu, 08 Dec 2022 17:09:08 +0000
gov.gitcoin.co-post-12265-2
Anti-Sybil Legos
      

Anti-Sybil Legos
j-cook

            <p><em>This post is intended to give a high level outline of the way we are thinking about composable  anti-Sybil Lego’s as we move to the protocol-based grants system</em></p>
<p>Gitcoin depends on Gitcoin grants which depends on quadratic funding which has to be defended against Sybils. The core of this is solving for one-human one-vote. Right now, Gitcoin does this by identifying Sybil behaviours in users and then “squelching” those users from the system - this is done using a sequence of data science tools and human reviews that are managed by a relatively small pool of trusted operators. However, Gitcoin is decentralizing by converting the core functions into a set of tools that together comprise a protocol that can be applied by individual round and grant owners rather than by a centralized team. The tools can also be forked and recombined in creative ways in other projects, making them useful across the whole of Web3, not just within Gitcoin.</p>
<p>This transition requires the Sybil defense and grant reviewing procedures currently managed by humans to be broken down into discrete units, defined in code, documented and made accessible as composable building blocks. These are known as “Legos”. Lego bricks are simple building blocks that can be connected to each other in creative combinations to form all kinds of structures or even machines that are much more complex than their component parts. Similarly, modular, composable software tools can be used to build imaginative systems for defending against Sybils.</p>
<p>This post examines what a “Lego” is and what we should be aware of when we build them.</p>
<h2>
<a name="what-does-a-lego-look-like-1" class="anchor" href="https://gov.gitcoin.co#what-does-a-lego-look-like-1"></a>What does a Lego look like?</h2>
<p>A "Lego"is a discrete unit that performs one, specific function in the Gitcoin protocol. It should work as a building block, meaning that it should be deployable on its own, taking well defined inputs and returning some known outputs. It should also connect to other Legos, which requires some standardization of types and formats for inputs and outputs so that tools can be chained together in intuitive pipelines. Making these Lego’s available empowers the community to build on top of them and saves developers from having to repeatedly reinvent the wheel when building out new products.</p>
<p>To be truly composable,a Lego should be:</p>
<ul>
<li>
<strong>Tightly scoped</strong>: the tool should fulfill one single function without side-effects so that it can be deployed in a variety of contexts with reliable outcomes.</li>
<li>
<strong>Free and open</strong>: open source codes that is publicly available, auditable, able to run on normal consumer hardware.</li>
<li>
<strong>Permissionless</strong>: not requiring special credentials or licenses to view, download or deploy, and users have the ability to fork the code any time.</li>
<li>
<strong>Accessible</strong>: sufficiently well-documented and with intuitive UX to enable a wide community of users</li>
<li>
<strong>Minimal dependencies</strong>: protect the “supply chain” by minimizing the dependencies. Where dependencies are unavoidable, bundle them or make them very easy to access.</li>
<li>
<strong>Modular</strong>: uses common formats and types so that outputs of one Lego can become inputs to another in pipelines - i.e. the legos are designed to be used as building blocks for larger systems with no specific predetermined structure.</li>
<li>
<strong>Open governance</strong>: Decisions about the development of the Lego’s should not be gated by individuals or centralized groups - instead governance should be open so that users can trust that the code will be developed and maintained with integrity and community participation.</li>
</ul>
<p>Some examples of Lego’s that conform to these norms are smart contracts on Ethereum. Smart contracts, or even individual functions of smart contracts, can be forked and rewritten, or stacked on top of each other in creative ways to build new protocols. This is common practise in DeFi, where primitives such as asset borrowing, lending and staking contracts are combined in many different ways by teams aiming to create protocols optimized for yield, or resilience, or security. Token standards such as ERC-20 (Ethereum token standard) and ERC-721 (Ethereum NFT standard) are composable primitives that can be built on top of - there is a huge diversity of token and NFT projects built on top of these original standards, often in combination with DeFi Legos, creating a diverse landscape of decentralized financial products and a community with freedom and agency to create new versions and implement new ideas.</p>
<p>We want to bring that freedom and agency to public goods funding. Rather than being centralized overseers of public goods funding, we want to share tools that empower the community to do it in clever and creative new ways.</p>
<h2>
<a name="gitcoin-legos-2" class="anchor" href="https://gov.gitcoin.co#gitcoin-legos-2"></a>Gitcoin Legos</h2>
<p>To enable this decentralized future, we need Lego’s that can be used to protect public goods funding from Sybil attacks. There is a diverse plurality of attackers, so we need a diverse and reactive plurality of defenses and this can only come from bottom-up protocols built by communities, for communities, using composable primitives. If the default settings for Sybil scoring doesn’t work for a sub-community? No problem, open, composable tools allow subcommunities to optimize their own configurations and to chop up and recombine the tools in the right way for their specific use-case. Attackers do this to exploit vulnerabilities - the only way to tip the scales in favour of defenders is to enable defenders to do the same. For example, a grant seeking to build specific web3 infrastructure could benefit from filtering proposals based on recurring keywords or phrases. However, this behaviour could feasibly be learned by a text-generating Sybil algorithm that could capitalize on the same recurrence patterns. Alternatively, a Lego based system could enable round owners to comply with different standards in different scenarios, for example KYC/KYB Legos could be incorporated into a grant when required, and ommitted otherwise.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://gov.gitcoin.co/uploads/db4391/original/2X/0/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32.png" data-download-href="https://gov.gitcoin.co/uploads/db4391/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32" title=""><img src="https://gov.gitcoin.co/uploads/db4391/optimized/2X/0/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32_2_690x345.png" alt="" data-base62-sha1="1NE3LSt8rzYaT4uPNsX6zKP0PWG" role="presentation" width="690" height="345" srcset="https://gov.gitcoin.co/uploads/db4391/optimized/2X/0/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32_2_690x345.png, https://gov.gitcoin.co/uploads/db4391/optimized/2X/0/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32_2_1035x517.png 1.5x, https://gov.gitcoin.co/uploads/db4391/original/2X/0/0c9ed932dfd269527cb2a6044fd5e3a4da23ee32.png 2x" data-dominant-color="E9F9F5"></a></div><p></p>
<h3>
<a name="gitcoin-passport-3" class="anchor" href="https://gov.gitcoin.co#gitcoin-passport-3"></a>Gitcoin Passport</h3>
<p>One major Lego that is already available is Gitcoin Passport. Gitcoin Passport is a tool that allows users to prove they have some credentials that make them more trustable. These credentials can come from Web2 or Web3. Example from Web2 include having a Facebook, Twitter, Github or Google accounts that meet some basic criteria (number of followers/posts etc). From Web3, BrightID, ENS and Proof-of-Humanity profiles can be used as stamps. The stamps are generated by the user exposing their Web2/Web3 accounts once, and then a stamp is minted in the user’s Passport, with no personal identifying data saved along the way. The passport only includes the stamps - the proof that evidence exists - and no actual identifying data (working like a zero-knowledge proof).</p>
<p>One of the powerful features of Gitcoin passport is that the precise combinations of stamps in a wallet can be used to generate a “trust score”. This can then be used to scale the influence a user has on a vote - more trusted leads to greater influence, less trusted leads to smaller influence. This trust-score could also be used as a threshold - if a user does not have trust score at least <code>X</code>, they cannot participate. Alternatively, specific stamps might be required for participation in certain grant rounds. In some ways Gitcoin Passport is a kind of Lego of Lego’s in that it is itself a modular component in a Sybil defense system, but it can also be thought of as a wrapper around various stamp combinations that provide evidence for some specific credential. For example, one passport credential might be “Professional Presence” which takes in LinkedIn and Twitter stamps - another might be “Web3 education” that takes in NFTs or soulbound tokens administered by verified courses (e.g. Rabbit Hole, Gitcoin quests, various bootcamps). “Community Involvement” might include a boolean for whether a base-line number of grant donations has been met, as well as other indicators such as a boolean for number of twitter followers. This way of thinking implies some heirarchy of Legos, with stamp combinations that fulfil some common purpose being low-level Legos and Passport itself being a higher level Lego.</p>
<p>Importantly, communities using Gitcoin Passport as an identity/Sybil defense Lego can define new stamps and screen passports in ways that give them the greatest power to defend their grant round. A great example is using GitPOAP as a stamp as this proves that a user has made some contributions to a specific Github repository, indicating that they are really part of a builder community for some project. This would be a very important stamp for one community, but irrelevant for many others. Rather than being a simple test of whether a user has a “valid” passport, communities are empowered to build nuanced trust and reputation systems from Gitcoin Passport stamps and related tooling.</p>
<p>As part of the tooling, Gitcoin passport exposes an API for builders that includes functions for scoring passports. This means prebuilt, free and open-source tools for analyzing and digesting Passport data can easily be integrated into a Sybil defense/identity system. The API makes it easy for developers to adjust the way a platform scores combinations of stamps. If a user doesn’t agree with the default scoring algorithm defined by Gitcoin data scientists - no problem, they can define something that works for them without havign to build new tools from scratch but by tweaking parameters in simple API calls. The API itself is openly available and documented so it could be forked and revised by developers that want to make more substantial changes to the underlying code. Eventually, the landscape should include intuitive “no-code” UIs (e.g. web apps) for end users to define and combine their own Legos but also deeper access via modular APIs and open-access source code for developers.</p>
<p>Gitcoin Passport is also a great example of composable tools being built for one purpose (Gitcoin Sybil defense) but being used in creative ways across Web3. It is being used to give roles in Ethstaker’s Discord server, for gating NFT mints at Bankless Academy and adding Sybil resistance to the <a href="https://go.gitcoin.co/blog/gitcoin-passport-snapshot-making-dao-coordination-more-secure" rel="noopener nofollow ugc">Snapshot</a> decentralized voting platform - very valuable use-cases that are completely disconnected from the original intended purpose - the epitome of composability!</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://gov.gitcoin.co/uploads/db4391/original/2X/6/69e0966cd60c784bdbbbde689e9e07d09d21d06e.png" data-download-href="https://gov.gitcoin.co/uploads/db4391/69e0966cd60c784bdbbbde689e9e07d09d21d06e" title=""><img src="https://gov.gitcoin.co/uploads/db4391/optimized/2X/6/69e0966cd60c784bdbbbde689e9e07d09d21d06e_2_492x500.png" alt="" data-base62-sha1="f6DjhTxJCtIhsHF6VZOxF3dtx2C" role="presentation" width="492" height="500" srcset="https://gov.gitcoin.co/uploads/db4391/optimized/2X/6/69e0966cd60c784bdbbbde689e9e07d09d21d06e_2_492x500.png, https://gov.gitcoin.co/uploads/db4391/original/2X/6/69e0966cd60c784bdbbbde689e9e07d09d21d06e.png 1.5x, https://gov.gitcoin.co/uploads/db4391/original/2X/6/69e0966cd60c784bdbbbde689e9e07d09d21d06e.png 2x" data-dominant-color="A5A0A3"></a></div><p></p>
<h3>
<a name="what-other-legos-do-we-need-4" class="anchor" href="https://gov.gitcoin.co#what-other-legos-do-we-need-4"></a>What other Lego’s do we need?</h3>
<p>Gitcoin Passport is a very powerful anti-Sybil lego with similarities to real passports in that it serves as a form of identification that also uses stamps to demonstrate temporary association and compliance with some entity. Certain country stamps are considered more high-trust than others and that gives some variable reputational boost to the passport holder.</p>
<p>However, it has also been shown that retroactive squelching of Sybils paired with Gitcoin Passport is required to really robustly defend a grant round. At the moment this is done using a trained machine learning pipeline that is operated by a few expert operators within the Gitcoin Fraud Detection and Defense squad. The challenge is to turn this centralized modelling into a set of composable Sybil defense Lego’s. One option might be to develop a standard template for modelling and model auditing so that users can train models on their own features and present the results openly to the community. It would be logical for the <a href="https://www.loom.com/share/bd5a722fdd91444b81e525f650f2e857" rel="noopener nofollow ugc">Open Data Community</a> to participate in developing and audting models for subcommunities and ensuring they meet basic standards for performance and statistical significance. This would make it possible to train models for specific subsets of users rather than a single model that applies generally to the whole of Gitcoin. These retroactive Sybil defense models can then become Legos that round owners can use in combination with other tools, including Gitcoin Passport, to defend their grant rounds against Sybil attacks. The power is with the user - they can choose to train independently, or they can use Gitcoin models “out-of-the-box”.</p>
<p>There are also less technical tools that could become Sybil-defense legos. For example, rulesets or guidelines for resolving disputes (someone tagged as Sybil might claim to be an honest user and require human intervention). It is also possibel to develop governance legos, so that good practises developed in Gitcoin DAO can easily be forked and applied to sub-communities - again preventing users from reinventing the wheel.</p>
<h2>
<a name="how-will-people-use-them-5" class="anchor" href="https://gov.gitcoin.co#how-will-people-use-them-5"></a>How will people use them?</h2>
<p>The beauty of composable, modular tools is that the original developers cannot predict all the ways the tools might be used, just like the manufacturer of Lego bricks can’t anticipate what will be built with them. However, we can explain the intended purpose. The lego’s developed at Gitcoin are intended to turn the platform into a decentralized protocol. Individual round owners will be able to simply import useful tools for Sybil resistance, dispute resolution, governance etc that they can tweak and control without relying on a centralized team from Gitcoin but at the same time benefiting from the experience and expertise of Gitcoin data scientists, grant managers etc who develop the tools in the first place.</p>
<h2>
<a name="dangers-of-lego-6" class="anchor" href="https://gov.gitcoin.co#dangers-of-lego-6"></a>Dangers of Lego</h2>
<p>Building with Lego’s is amazing because there is an infinite combination of blocks that can be used to realize a wide space of possibilities. However, there are risks associated with this composability model too.</p>
<p>First, when we empower users we also empower Sybil attackers. Being completely open source and accessible also means giving Sybil attackers insight into the inner workings of the defenses that aim to keep them out. This might enable them to attack more effectively - the opposite of the desired outcome. However, it is still likely that the net effect of open-sourcing Sybil defense lego’s is enhanced security. The reason is that just because an attacker can understand the tools used to build a protocol, it doesn’t necessarily follow that they can then attack it. The composability principle suggests that it is the combination of Lego’s the attacker would have to overcome, not the individual Lego’s themselves. It doesn’t help an attacker to know that they require a certain Passport stamp if that same passport stamp has a cost of forgery higher than they are willing to pay, for example. This is especially true when subcommunities are empowered to set their own eligibility requirements as they can require very specific sets of credentials that might not only be hards to forge, but be specific to that subcommunity, limiting the potential rewards for an attacker. Overall, it seems more likely that plurality in the defensive layer will shift the risk:reward ratio in the favour of the defender, not the attacker.</p>
<p>Bribery and blackmail, on the other hand, might be a bigger problem. What happens if, instead of bearing the cost of making Sybils conform to some eligibility requirements, an attacker instead spends their capital on bribing a round owner to adjust the requirements in their favour? With composable, tuneable tools, the round owner might have the agency to tune down certain parameters or be more lenient than they otherwise would in the trust scoring system to benefit an attacker in return for some reward. This is where human intervention is important - some heirarchy of oversight where round managers monitor grants in their round and set some top-level requirements (e.g. minimum trust score must be at least <code>x</code>, <code>y</code> stamp is an essential requirement etc) would help to combat this.</p>
<p>Similarly, accounts that have combinations of stamps and other credentials that are likely to be classified as non-Sybil (which can be tested by attackers using the open-source tools and some assumptions about the decisions round owners will make regarding their configuration) could be bought and sold on a black market. An example might be a user that is a real, vetted person with substantial proof-of-personhood associatd with their address deciding to sell access to that address for use in a specific round they were not already intending to participate in. Renting out personhood could be a profitable strategy for users, and the market would naturally find a price per rental that is high enough for users to be incentivized to participate and low enough that attackers would profit by using the rented accounts to vote in a particular way.</p>
<p>There is also a risk of creating unintended consequences and vulnerabilities in some combinations of Lego’s. It is very powerful to be able to create anything, but it is also difficult to anticipate all the various attack vectors and weaknesses that could inadvertently be introduced when Lego’s are arranged in certain configurations. While anything can be built from lego, it is also possible to build wobbly towers. We must try to prevent this with solid documentation and educational resources and community oversight. Incentivizing code maintenance and testing as well as building will be an important defensive strategy against these “wobbly tower” scenarios.</p>
<p>Finally, there is the risk of releasing tools that others could use for nefarious purposes, or in ways that do not match the ethos of the original developers. For example, even if individual Lego’s do not collect and store personal identifying information, a fork of the same tools might. It would be difficult for users to tell between implementations that are sufficiently private and those that are not. At this stage, the only real defense against this is a vigilant community that can call these behaviours out, clear and accessible documentation that contains ample warning about potential scams and attacks, and the development of great user friendly tools that <em>do</em> meet community standards that will naturally be adopted instead.</p>
<h2>
<a name="summary-7" class="anchor" href="https://gov.gitcoin.co#summary-7"></a>Summary</h2>
<p>Composability is a superpower for decentralized protocols. Gitcoin Passport is a great example of a high-utility identity Lego. We also need to build out more anti-Sybil lego’s to enable the transition to decentralized protocol, while also being aware that composability introduces some new risks. There is a lot of opportunity for contributions from the extended Gitcoin community (importantly including the Gitcoin passort and Open Data Science communities) in the form of new Legos as well as maintenance, testing and auditing of existing ones. The broader and more diverse the community of Lego builders, the more decentralized and resilient the new Gitcoin grants protocol will be.</p>
<p><em>Thanks to several contributors from FDD and Gitcoin passport for contributing to this post!</em></p>
          <p><a href="https://gov.gitcoin.co/t/anti-sybil-legos/12265/1">Read full topic</a></p>
        
https://gov.gitcoin.co/t/anti-sybil-legos/12265/1
        Thu, 08 Dec 2022 14:42:15 +0000
gov.gitcoin.co-post-12265-1
Anti-Sybil Legos
      


